task 2
(*) local host public IP: 1.1.1.1/32
---
- hosts: awsec2
  vars:
    - bizango_password: 'aaaabbb123'
    ip_addresses: 
      - 1.1.1.1/32
  gather_facts: False
  remote_user: centos
  become: true
  
  tasks:
  - name: Add a new user named bizango
    user:
      name: bizango
      shell: /bin/bash
      password: "{{ bizango_password }}"
   
  - name: Add bizango user to the sudoers
    copy:
      dest: "/etc/sudoers.d/bizango"
      content: "bizango  ALL=(ALL)  NOPASSWD: ALL"
   
   - name: Deploy SSH Key
     authorized_key: 
       user=bizango
       key="{{ lookup('file', '/home/bizango/.ssh/id_rsa.pub') }}"
       state=present
   
   - name: Disable Password Authentication
     lineinfile:
       dest=/etc/ssh/sshd_config
       regexp='^PasswordAuthentication'
       line="PasswordAuthentication no"
       state=present
       backup=yes

    - name: Disable Root Login
      lineinfile:
        dest=/etc/ssh/sshd_config
        regexp='^PermitRootLogin'
        line="PermitRootLogin no"
        state=present
        backup=yes
     notify:
       - restart sshd
       
       
    - name: Setup alternate SSH port
      lineinfile:
        dest: "/etc/ssh/sshd_config"
        regexp: "^Port"
        line: "Port 10022"
      notify: 
        - restart sshd

    - name: Setup selinux for alternate SSH port
      seport:
        ports: "10022"
        proto: "tcp"
        setype: "ssh_port_t"
        state: "present" 
      
    - name: logout all users idle for 10 mins
      lineinfile:
        dest: "/etc/profile"
        line: "TMOUT 600"
        
    - name: add rule in ec2 security group
      ec2_group:
        aws_access_key: "{{ aws_access_key }}"
        aws_secret_key: "{{ aws_secret_key }}"
        vpc_id: "{{ ec2_vpc_net_result.vpc.id }}"
        region: "{{ region }}"
        profile: ""{{ profile-name }}"
        name: "{{ security_group_name }}"
        description: "{{ security_group_name }}"
        purge_rules: true
        rules:
          - proto: tcp
            from_port: <some port>
            to_port: 10022
            cidr_ip: "{{ ip_addresses }}"
        rule_desc: allow all on port 10022
        register: security_group_results

  handlers:
    - name: restart sshd
      service:
        name=sshd
        state=restarted
